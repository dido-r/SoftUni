using System;
using System.Collections.Generic;
using System.Linq;

namespace SoftUniCoursePlanning
{
    class Program
    {
        static void Main(string[] args)
        {
            string initialSchedule = Console.ReadLine();
            List<string> list = initialSchedule.Split(", ").ToList();
            string input = Console.ReadLine();

            while (input != "course start")
            {
                string[] command = input.Split(":");

                if (command[0] == "Add")
                {
                    if (!list.Contains(command[1]))
                    {
                        list.Add(command[1]);
                    }
                }
                else if (command[0] == "Insert")
                {
                    if (!list.Contains(command[1]))
                    {
                        list.Insert(int.Parse(command[2]), command[1]);
                    }
                }
                else if (command[0] == "Remove")
                {
                    RemoveElement(command, list);
                }
                else if (command[0] == "Swap")
                {
                    SwapElements(command, list);
                }
                else if (command[0] == "Exercise")
                {
                    AddExercise(command, list);
                }
                input = Console.ReadLine();
            }
            for (int i = 0; i < list.Count; i++)
            {
                Console.WriteLine($"{i + 1}.{list[i]}");
            }
        }
        static void RemoveElement(string[] command, List<string> list)
        {
            if (list.Contains(command[1]))
            {
                int indexForEx = list.IndexOf(command[1]) + 1;

                if (indexForEx < list.Count)
                {
                    string[] excercise = list[indexForEx].Split("-");
                    if (excercise[0] == command[1] && excercise[1] == "Exercise")
                    {
                        list.Remove(list[indexForEx]);
                    }
                }
                list.Remove(command[1]);
            }
        }
        static void AddExercise(string[] command, List<string> list)
        {
            if (!list.Contains(command[1]))
            {
                list.Add(command[1]);
                string exercise = command[1] + "-" + "Exercise";
                list.Add(exercise);
            }
            else
            {
                int indexExercise = list.IndexOf(command[1]) + 1;
                string AddExcercise = command[1] + "-" + "Exercise";

                if (indexExercise > list.Count - 1)
                {
                    list.Add(AddExcercise);
                    return;
                }

                if (list[indexExercise] != AddExcercise)
                {
                    list.Insert(indexExercise, AddExcercise);
                }
            }
        }
        static void SwapElements(string[] command, List<string> list)
        {
            if (list.Contains(command[1]) && list.Contains(command[2]))
            {
                string first = command[1];
                int firstIndex = list.IndexOf(first);
                int firstExcerciseIndex = list.IndexOf(first) + 1;
                string second = command[2];
                int secondIndex = list.IndexOf(second);
                int secondExcerciseIndex = list.IndexOf(second) + 1;
                list[firstIndex] = second;
                list[secondIndex] = first;
                string nameExcerciseFirst = command[1] + "-" + "Exercise";
                string nameExcerciseSecond = command[2] + "-" + "Exercise";

                if (firstExcerciseIndex < list.Count)
                {
                    if (list[firstExcerciseIndex] == nameExcerciseFirst)
                    {
                        if (secondExcerciseIndex < list.Count)
                        {
                            list.Insert(secondExcerciseIndex, nameExcerciseFirst);
                            list.RemoveAt(secondExcerciseIndex + 1);
                        }
                        else
                        {
                            list.Add(nameExcerciseFirst);
                            list.Remove(nameExcerciseFirst);
                        }
                    }
                }

                if (secondExcerciseIndex < list.Count)
                {
                    if (list[secondExcerciseIndex] == nameExcerciseSecond)
                    {
                        if (firstExcerciseIndex < list.Count)
                        {
                            list.Insert(firstExcerciseIndex, nameExcerciseSecond);
                            list.RemoveAt(secondExcerciseIndex + 1);
                        }
                        else
                        {
                            list.Add(nameExcerciseSecond);
                            list.RemoveAt(secondExcerciseIndex);
                        }
                    }
                }
            }
        }
    }
}