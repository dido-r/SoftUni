using System;
using System.Linq;
using System.Collections.Generic;

namespace DragonArmy
{
    class Program
    {
        static void Main(string[] args)
        {
            List<Dragon> dragonList = new List<Dragon>();
            Dictionary<string, List<Dragon>> dragons = new Dictionary<string, List<Dragon>>();
            int n = int.Parse(Console.ReadLine());

            for (int i = 0; i < n; i++)
            {
                string[] input = Console.ReadLine().Split();

                if (input[2] == "null")
                {
                    input[2] = "45";
                }
                if (input[3] == "null")
                {
                    input[3] = "250";
                }
                if (input[4] == "null")
                {
                    input[4] = "10";
                }

                string type = input[0];
                string name = input[1];
                int damage = int.Parse(input[2]);
                int health = int.Parse(input[3]);
                int armor = int.Parse(input[4]);

                Dragon dragon = new Dragon();
                dragon.Name = name;
                dragon.Damage = damage;
                dragon.Health = health;
                dragon.Armor = armor;

                if (!dragons.ContainsKey(type))
                {
                    dragons.Add(type, new List<Dragon>());
                    dragons[type].Add(dragon);
                }
                else
                {
                    if (dragons[type].Any(x => x.Name == name))
                    {
                        var currentDragon = dragons[type].First(x => x.Name == name);
                        currentDragon.Damage = damage;
                        currentDragon.Health = health;
                        currentDragon.Armor = armor;
                    }
                    else
                    {
                        dragons[type].Add(dragon);
                    }
                }
            }

            foreach (var item in dragons)
            {
                Console.WriteLine($"{item.Key}::({item.Value.Average(x => x.Damage):f2}/{item.Value.Average(x => x.Health):f2}/{item.Value.Average(x => x.Armor):f2})");

                foreach (var drag in item.Value.OrderBy(x => x.Name))
                {
                    Console.WriteLine($"-{drag.Name} -> damage: {drag.Damage}, health: {drag.Health}, armor: {drag.Armor}");
                }
            }
        }
    }

    class Dragon
    {
        public string Name { get; set; }
        public int Damage { get; set; }
        public int Health { get; set; }
        public int Armor { get; set; }
    }
}