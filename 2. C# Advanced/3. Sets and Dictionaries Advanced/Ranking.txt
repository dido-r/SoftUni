using System;
using System.Linq;
using System.Collections.Generic;

namespace Ranking
{
    class Program
    {
        static void Main(string[] args)
        {
            Dictionary<string, string> contests = new Dictionary<string, string>();
            Dictionary<string, Dictionary<string, int>> users = new Dictionary<string, Dictionary<string, int>>();

            string input = Console.ReadLine();

            while (input != "end of contests")
            {
                string[] contestInfo = input.Split(":");
                contests.Add(contestInfo[0], contestInfo[1]);
                input = Console.ReadLine();
            }

            string submissions = Console.ReadLine();

            while (submissions != "end of submissions")
            {
                string[] data = submissions.Split("=>");
                string contest = data[0];
                string pass = data[1];
                string user = data[2];
                int point = int.Parse(data[3]);

                if (contests.ContainsKey(contest) && contests[contest] == pass)
                {
                    if (!users.ContainsKey(user))
                    {
                        users.Add(user, new Dictionary<string, int>());
                    }
                    if (!users[user].ContainsKey(contest))
                    {
                        users[user].Add(contest, point);
                    }
                    else if (users[user][contest] < point)
                    {
                        users[user][contest] = point;
                    }
                }
                submissions = Console.ReadLine();
            }
            int maxSum = int.MinValue;
            string bestUser = string.Empty;

            foreach (var user in users)
            {
                int sum = 0;

                foreach (var lesson in user.Value)
                {
                    sum += lesson.Value;
                }
                if (sum > maxSum)
                {
                    maxSum = sum;
                    bestUser = user.Key;
                }
            }
            Console.WriteLine($"Best candidate is {users.First(x => x.Key == bestUser).Key} with total {maxSum} points.");
            Console.WriteLine("Ranking:");

            foreach (var user in users.OrderBy(name => name.Key))
            {
                Console.WriteLine(user.Key);

                foreach (var lesson in user.Value.OrderByDescending(points => points.Value))
                {
                    Console.WriteLine($"#  {lesson.Key} -> {lesson.Value}");
                }
            }
        }
    }
}
